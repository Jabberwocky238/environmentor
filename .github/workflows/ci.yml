name: Tauri CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  release:
    types: [created]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # platform: [macos-latest, ubuntu-latest, windows-latest]
        platform: [windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: 'https://registry.yarnpkg.com'

      - name: Install app dependencies
        run: |
          # Install Rust dependencies
          rustup component add clippy
          rustup component add rustfmt
          # Install JavaScript dependencies
          yarn

      # - name: Check Rust code
      #   run: |
      #     cargo fmt --all -- --check
      #     cargo clippy -- -D warnings

      - name: Build the app
        run: |
          yarn tauri build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}
          path: src-tauri/target/release/bundle/*

  release:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        # platform: [macos-latest, ubuntu-latest, windows-latest]
        platform: [windows-latest]

    runs-on: ${{ matrix.platform }}

    if: github.event_name == 'release'

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./*
          asset_name: ${{ matrix.platform }}
          asset_content_type: application/zip
